version: '3.8'

services:
  # app:
  #   build:
  #     context: ..
  #     dockerfile: .devcontainer/Dockerfile
    # env_file:
    #     - .env

    # volumes:
    #   - ../..:/workspaces:cached

    # Overrides default command so things don't shut down after the process ends.
    # command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:db

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  # postgres:
  #   image: postgres:latest
  #   restart: unless-stopped
  #   hostname: ${POSTGRES_HOST}
  #   env_file:
  #       - .env
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data


    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  instant-ngp-worker:
    image: instantngp:latest
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile_worker
    stdin_open: true
    tty: true
    environment:
      NVIDIA_DRIVER_CAPABILITIES: compute,utility,graphics
    volumes:
      - ../:/volume
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ../..:/workspaces:cached
    working_dir: /volume/src
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
    depends_on:
        - redis
    env_file:
        - ../.env
    command: python3 worker.py
    links:
        - redis
    restart: unless-stopped

  redis:
    image: redis:latest
    command: redis-server
    restart: unless-stopped


  api:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile_api
    volumes:
        - ../:/volume
    working_dir: /volume
    depends_on:
        - redis
    env_file:
        - .env
    command: python3 ./src/app.py
    links:
        - redis
    ports:
      - ${FLASK_PORT}:${FLASK_PORT}
    restart: unless-stopped